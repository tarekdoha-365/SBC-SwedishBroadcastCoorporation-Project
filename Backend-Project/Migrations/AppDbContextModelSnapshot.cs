// <auto-generated />
using System;
using Backend_Project.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Backend_Project.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Backend_Project.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsExpired")
                        .HasColumnType("bit");

                    b.Property<bool>("Modified")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Published")
                        .HasColumnType("datetime2");

                    b.Property<string>("Report-Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reports");

                    b.HasDiscriminator<string>("Report-Type").HasValue("Report");
                });

            modelBuilder.Entity("Backend_Project.Models.ReportBusiness", b =>
                {
                    b.HasBaseType("Backend_Project.Models.Report");

                    b.HasDiscriminator().HasValue("Business");
                });

            modelBuilder.Entity("Backend_Project.Models.ReportClimate", b =>
                {
                    b.HasBaseType("Backend_Project.Models.Report");

                    b.HasDiscriminator().HasValue("Climate");
                });

            modelBuilder.Entity("Backend_Project.Models.ReportEntertainmentAndArt", b =>
                {
                    b.HasBaseType("Backend_Project.Models.Report");

                    b.HasDiscriminator().HasValue("EntertainmentAndArt");
                });

            modelBuilder.Entity("Backend_Project.Models.ReportHealth", b =>
                {
                    b.HasBaseType("Backend_Project.Models.Report");

                    b.HasDiscriminator().HasValue("Health");
                });

            modelBuilder.Entity("Backend_Project.Models.ReportPolitics", b =>
                {
                    b.HasBaseType("Backend_Project.Models.Report");

                    b.HasDiscriminator().HasValue("Politics");
                });

            modelBuilder.Entity("Backend_Project.Models.ReportScience", b =>
                {
                    b.HasBaseType("Backend_Project.Models.Report");

                    b.HasDiscriminator().HasValue("Science");
                });

            modelBuilder.Entity("Backend_Project.Models.ReportStories", b =>
                {
                    b.HasBaseType("Backend_Project.Models.Report");

                    b.HasDiscriminator().HasValue("Stories");
                });

            modelBuilder.Entity("Backend_Project.Models.ReportTechnology", b =>
                {
                    b.HasBaseType("Backend_Project.Models.Report");

                    b.HasDiscriminator().HasValue("Technology");
                });
#pragma warning restore 612, 618
        }
    }
}
